[Audio]
AudioDeviceModuleName=XAudio2
AudioMixerModuleName=AudioMixerXAudio2
PlatformFormat=OGG
PlatformStreamingFormat=OGG

PlatformHeadroomDB=-3
UseAudioMixer=true

[TextureStreaming]
PoolSizeVRAMPercentage=70

[SystemSettings]
r.setres=1280x720
framepro.ScopeMinTimeMicroseconds=10
fx.NiagaraAllowRuntimeScalabilityChanges=1
QualityLevelMapping="high"
r.Occlusion.SingleRHIThreadStall=1
r.Shadow.DetectVertexShaderLayerAtRuntime=1

; ----- ULTRA PLUS -----

; ----- debugging -----
r.EnableDebugSpam_GetObjectPositionAndScale=0		; (1) ensure. used to hack some textures to load
memory.LogGenericPlatformMemoryStats=0				; (1)
fx.Niagara.DebugDraw.Enabled=0						; (1)
au.BakedAnalysisEnabled=0							; (1)
p.Chaos.VisualDebuggerEnable=0						; (1)
r.GPUCrash.DataDepth=0								; (-1)
r.GPUCrash.Collectionenable=0						; (1)
r.GPUCrashDebugging.Aftermath.TrackAll=0			; (1)
r.ForceDebugViewModes								; (0)
LevelSequence.InvalidBindingTagWarnings=False		; (True)
TimerManager.DumpTimerLogSymbolNames=0				; (1)
TimerManager.DumpTimerLogResolveVirtualFunctions=0	; (1)

; ----- garbage collection -----
g.bEnablePendingCleanupObjectsCommandBatching		; (True) TRY
gc.AllowParallelGC									; (1)
gc.MultithreadedDestructionEnabled					; (1)
gc.NumRetriesBeforeForcingGC						; (1)
gc.MinDesiredObjectsPerSubTask=8					; (128)
gc.CreateGCClusters									; (1)
gc.MinGCClusterSize=2								; (5)
gc.AssetClustreringEnabled							; (1)
gc.ActorClusteringEnabled=0							; (1)
gc.BlueprintClusteringEnabled						; (0)
gc.TimeBetweenPurgingPendingKillObjects=61.0998		; (10000000) TRY
gc.LowMemory.MemoryThresholdMB=200					; (100)
gc.LowMemory.TimeBetweenPurgingPendingKillObjects=15.563	; (1.1) TRY they had memory problems?

; ----- DIAGNOSTICS -----
AudioThread.SuspendAudioThread					; (0)
au.AllowUnsafeAudioMixerToggling				; (0)
r.Nanite.Streaming.Debug.ExplicitRequests		; (1)
r.Nanite.Streaming.Debug.GPURequests			; (1)
r.Nanite.Streaming.Debug.Prefetch				; (1)
r.GPUScene.DebugDrawRange						; (-1.0) TRY
r.SkinCache.Debug			 					; (1.0) TRY
r.Lumen.Visualize.IndirectDiffuse
r.Lumen.Visualize
r.Lumen.RadianceCache.Visualize
r.LumenScene.SurfaceCache.ResetEveryNthFrame
foliage.DiscardDataOnLoad						; (0) disables foliage
;grass.DiscardDataOnLoad=1						; (0) disables grass
fx.NiagaraAllowComputeShaders					; (1)
fx.NiagaraAllowGPUParticles						; (1)
fx.ExecVMScripts								; (1)

; ----- network -----
net.AllowAsyncLoading=1							; (0) only for network/multiplayer games

; ----- engine switches -----
AttemptStuckThreadResuscitation=True			; (False)
g.TimeToBlockOnRenderFence						; (1)
r.GraphicsAdapter								; (-1)
r.GPUScene.InstanceBVH							; TRY
r.GPUScene.MaxPooledUploadBufferSize			; (256000)
d3d12.VRAMBufferPoolDefrag.MaxCopySizePerFrame=16777216		; (33554432)
d3d12.VRAMTexturePoolDefrag.MaxCopySizePerFrame=16777216	; (33554432)
r.GPUDefrag.MaxRelocations=4					; (10) TEST too many causes hitches
r.CookOutUnusedDetailModeComponents=1			; (0)
r.ParallelBasePass								; (1)
r.ParallelInitViews=0							; (1) already multi-threaded
r.ParallelPrePass=0								; (1)
r.ParallelCmdListInheritBreadcrumbs=0			; (1)
r.DontLimitOnBattery=1							; (0) ignore incorrect power states
r.DBuffer										; (1)
r.AllowSimpleLights								; (1) TRY
r.ParallelVelocity								; (1)
r.CustomDepth.Order								; (2)
r.CustomDepthTemporalAAJitter					; (1)
r.ForceSceneHasDecals							; (0)
r.LightPropagationVolume						; (0)
r.DefaultFeature.AmbientOcclusionStaticFraction=0		; (1) TEST
r.DynamicRes.OperationMode						; (0)
r.FastVRam.ForwardLightingCullingResources=0	; (1)
r.FastVRam.DBufferA=1							; (0) base color, opacity
r.FastVRam.DBufferB=1							; (0) world normal
r.FastVRam.DBufferC=1							; (0) roughness, metallic, specular
r.FastVRam.DBufferMask=1						; (0) masking
r.FastVRam.GBufferA=1							; (0) world normal
r.FastVRam.GBufferB								; (1) metallic, specular, roughness, ShadingModelID
r.FastVRam.GBufferC=1							; (0) basecolor
r.FastVRam.GBufferD=1							; (0) custom data
r.FastVRam.GBufferE=1							; (0) precomputed shadow factors
r.FastVRam.GBufferF=1							; (0) anisotropy
r.FastVRam.GBufferVelocity=1					; (0)
r.FastVRam.ScreenSpaceAO						; (0) USED?
r.FastVRam.ShadowCSM							; (0)
r.FastVRam.HZB									; (1)
r.FastVRam.ShadowPerObject						; (0) USED?
r.FastVRam.ShadowPointLight						; (0) USED?
r.FastVRam.SSR									; (0)
r.FastVRam.CustomDepth=1						; (0)
r.FastVRam.DistanceFieldAOBentNormal			; (0) USED?
r.FastVRam.DistanceFieldAODownsampledBentNormal	; (1) USED?
r.FastVRam.DistanceFieldAOHistory				; (1) USED?
r.FastVRam.DistanceFieldAOScreenGridResources	; (1) USED?
r.FastVRam.DistanceFieldCulledObjectBuffers		; (1)
r.FastVRam.DistanceFieldIrradiance				; (0) USED?
r.FastVRam.DistanceFieldNormal					; (1) USED?
r.FastVRam.DistanceFieldShadows					; (1) USED?
r.FastVRam.DistanceFieldTileIntersectionResources		; (1) USED?
r.AllowGlobalClipPlane							; (0) planar reflections not used

; ----- RHI -----
;r.FinishCurrentFrame=1							; (0) uncomment to fix microstutters
r.GTSyncType=1									; (0) fix tearing on some systems
r.OneFrameThreadLag=0							; (1) better on this game, confusingly (RHI modifications?)
r.RDG.AsyncCompute=0							; (1)
r.RDG.TransientAllocator						; (1)
r.RDG.ParallelExecute.PassMin					; (1) TUNE
r.RDG.TransientExtractedResources				; (1)
r.RDG.TransientAllocator.IndirectArgumentBuffers		; (0) likely broken
Async.ParallelFor.YieldingTimeout=99			; (8) in ms. i.e. never yield
AllowAsyncRenderThreadUpdates					; (1) better enabled
AllowAsyncRenderThreadUpdatesDuringGamethreadUpdates		; (1) better enabled
TaskGraph.NumForegroundWorkers=1				; (2)
TaskGraph.ForkedProcessMaxWorkerThreads			; (2)
TaskGraph.PrintBroadcastWarnings=0				; (1)
TaskGraph.TaskPriorities.AsyncIOCPUWork			; (bnn) TRY
TaskGraph.TaskPriorities.CompilePipelineStateTask				; (hnn) TRY
TaskGraph.TaskPriorities.ParallelAnimationEvaluationTask=nnn	; (hnn) Thread=normal pri, Task=normal, pri if forced to normal=normal
TaskGraph.TaskPriorities.ParallelBlendPhysicsTask				; (hnn)
;TaskGraph.TaskPriorities.FMeshDrawCommandPassSetupTask=hnn		; (nnn)
TaskGraph.TaskPriorities.AsyncEndOfFrameGameTasks				; (hnn) TRY
tick.AllowAsyncTickDispatch						; (0) worse enabled
tick.AllowAsyncTickCleanup						; (0) worse enabled
RHI.SyncInterval								; (1) leave locked to VBlank
RHI.SyncSlackMS=10.0							; (10.0)
RHI.MaximumFrameLatency							; (3)
r.RHICmdBypass									; (0) TRY
r.RHICmdBufferWriteLocks=0						; (1) irrelevant except for OpenGL
r.RHICmdWidth									; (8) 8 is about right with the current timings
r.RHIRenderPasses								; (0) worse?
r.RHICmdMinCmdlistForParallelSubmit				; (1) 1 is best (all parallel)
r.RHICmdMaxOutstandingMemoryBeforeFlush=64		; (256) TUNE
r.RHICmdDeferSkeletalLockAndFillToRHIThread		; (1)
r.RHICmdMinDrawsPerParallelCmdList				; (64) 32-64
r.FlushRHIThreadOnSTreamingTextureLocks			; (0)
RHI.GPUHitchThreshold=15.0						; (100.0) fire at 67 fps
RHI.TransientAllocator.GarbageCollectLatency	; (16)
RHI.TransientAllocator.BufferCacheSize=128		; (64) TRY
RHI.TransientAllocator.TextureCacheSize=128		; (64) TRY
RHI.TransientAllocator.MaximumHeapSize=1024		; (512) TRY
d3d12.MaxCommandsPerCommandList					; (10000) about right

; ----- streamer -----
pakcache.UseNewTrim=1							; (0)
pakcache.MaxBlockMemory=512						; (128)
pakcache.EnableNoCaching						; (0) TRY prevent reacquisition
pakcache.MaxRequestsToLowerLevel=4				; (2) TEST
pakcache.NumUnreferencedBlocksToCache=20		; (10) disk cache
pakcache.MaxRequestSizeToLowerLevellKB=4096		; (1024) i.e. 4096KB * 20 = 80MiB
;d3d12.ReadOnlyTextureAllocator.MinNumToPool=64	; (8) DIAG
;d3d12.ReadOnlyTextureAllocator.MaxPoolSize=104857600	; (20971520) DIAG
d3d12.TexturePoolOnlyAccountStreamableTexture	; (False) TRY false is legacy
s.IoDispatcherCacheSizeMB=1024					; (0) cache assets on CPU side
s.IoDispatcherBufferMemoryMB=64					; (8) TEST
s.IoDispatcherBufferSizeKB=256					; (256)
s.IoDispatcherDecompressionWorkerCount=3		; (4)
s.MaxIncomingRequestsToStall=0					; (100) causes streamer hammering (drum-buffer-rope problem)
s.MaxReadyRequestsToStallMB=400					; (30) causes streamer hammering (drum-buffer-rope problem)
s.MaxLevelRequestsAtOnceWhileInMatch=2			; (2)
s.ProcessPrestreamingRequests=1					; (0) "slightly better"
s.MaxPrecacheRequestsInFlight=8					; (2) TUNE
s.MinBulkDataSizeForAsyncLoading=99999999		; (65536) never warn
s.AsyncLoadingUseFullTimeLimit					; (1)
s.AsyncLoadingTimeLimit=3.0						; (15.0) 15 why?
s.LevelStreamingActorsUpdateTimeLimit			; (3.0)
s.PriorityAsyncLoadingExtraTime=0.0				; (2.0)
s.PriorityLevelStreamingActorsUpdateExtraTime=0.0		; (3.0)
s.UnregisterComponentsTimeLimit					; (3.0)
s.LevelStreamingAddPrimitiveGranularity			; (128) TUNE
s.LevelStreamingComponentsRegistrationGranularity=8		; (10) TUNE
s.LevelStreamingComponentsUnregistrationGranularity=4	; (10) TUNE
s.LevelStreamingRouteActorInitializationGranularity=8	; (10) TUNE
r.Streaming.ParallelRenderAssetsNumWorkgroups=3			; (2) TUNE "2-4 is about right"
r.Streaming.NumStaticComponentsProcessedPerFrame		; (50) TUNE
r.Streaming.Boost								; (1.0)
r.Streaming.AmortizeCPUToGPUCopy=1				; (0)
r.Streaming.LimitPoolSizeToVRAM					; (1)
r.Streaming.MaxTempMemoryAllowed=120			; (50)
r.Streaming.MaxNumTexturesToStreamPerFrame=16	; (0) only VTs are used
r.Streaming.AllowFastForceResident				; (0)
r.Streaming.FlushTimeOut						; (3.0)
r.Streaming.DefragDynamicBounds					; (1)
a.Streaming.ChunkSizeSeconds					; (4.0)
r.Nanite.Streaming.StreamingPoolSize=1024		; (512) prevent thrashing
r.Nanite.Streaming.Imposters					; (1) "needed"
r.Nanite.Streaming.BandwidthLimit				; (-1.0) in MB/s
r.Nanite.Streaming.MaxPageInstallsPerFrame=32	; (128) very high
r.Nanite.Streaming.MaxPendingPages				; (128)
r.DiscardUnusedQuality=1						; (0)
r.VT.CsvStats=0									; (1) TEST
r.VT.IOPriority_HighPagePri						; (2)
r.VT.IOPriority_NormalPagePri					; (1)
r.VT.MaxUploadMemory=128						; (64) likely works like MaxTempMemoryAllowed
r.VT.ParallelFeedbackTasks=1					; (0) TRY22
r.VT.MaxUploadRequests							; (2000) TRY22
r.VT.UploadMemoryPageSize						; (4)
r.VT.MaxTilesProducedPerFrame					; (128) scalability
r.VT.MaxUploadsPerFrame							; (128) scalability
r.VT.MaxContinuousUpdatesPerFrame				; (1) TRY
r.VT.MaxReleasedPerFrame						; (0)
r.VT.TranscodeRetireAge							; (60)
r.VT.AVT.MaxPageResidency						; (75) eviction watermark
r.VT.AVT.AgeToFree								; (60)
r.VT.CodecAgeThreshold							; (120)
r.VT.CodecNumThreshold							; (100)
r.VirtualTextureReducedMemory=1					; (0) TEST

; ----- audio -----
AudioCommand.FenceWaitTimeMs=10.0				; (35.0)
AudioThread.EnableAudioThreadWait				; (1)
AudioThread.AboveNormalPriority					; (0)
AudioThread.EnableBatchProcessing				; (1)
AudioThread.BatchAsyncBatchSize					; (128)
au.NRT.RenderFrameSize							; (256) about right
au.VoIP.AlwaysPlayVoiceComponent=0				; (1)
au.RenderThreadPriority=1						; (3) 0=Normal, 1=Above Normal, 3=Highest
au.DisableParallelSourceProcessing=0			; (1) TRY "better with parallelism"
au.DSP.FFTMethod								; (0)
au.NumPrecacheFrames							; (0) use automatic precache
au.CommandBufferMaxSizeInMb						; (10)
au.RealtimeDecompressZeroDurationSounds=1		; (0) just in cases
au.UnderrunTimeoutMSec=2						; (5)
au.streamcache.priming.PrimeDelayNodes=1		; (0)
au.streamcache.priming.PrimeRandomNodes=1		; (0)
au.streamcaching.PrimeSoundOnAudioComponents=1	; (0) TRY
au.streamcaching.StreamCacheSizeOverrideMB=512	; (0.0) "better overridden"
au.streamcaching.MinimumCacheUsage=0.7			; (0.9)
au.streamcaching.ReadRequestPriority=0			; (2) 0=High, 1=Normal, 2=Below Normal
au.EnableBinauralAudioForAllSpatialSounds=1		; (0) enables binaural for all spatial sounds (if binaural is available)

; ----- culling/occlusion -----
d3d12.InsertOuterOcclusionQuery=1				; (0) not used for Nanite
r.AlsoUseSphereForFrustumCull=1					; (0) not used for Nanite
r.HZBOcclusion									; (0) slower
r.HZB.BuildUseCompute							; (1)
r.DownsampledOcclusionQueries=1					; (0)
r.OcclusionCullParallelPrimFetch=1				; (0) probably not used with Nanite
r.ParallelGatherNumPrimitivesPerPacket			; (256) vanilla is better
r.ParallelGeometryCollectionBatchSize=1024		; (1024) WAS 2048
r.FrustumCullNumWordsPerTask=512				; (128) TUNE
r.NeverOcclusionTestDistance					; (0.0)
r.ExpandAllOcclusionTestedBBoxesAmount			; (0.0)
r.FramesToExpandNewlyOcclusionTestedBBoxes		; (2)
r.ExpandNewlyOcclusionTestedBBoxesAmount		; (0.0)
r.GFramesNotOcclusionTestedToExpandBBoxes		; (5)
r.ExpandAllOcclusionTestedBBoxesAmount			; (0.0) not needed for Nanite

; ----- meshes -----
GeometryCache.OffloadUpdate=1					; (0) TRY "needs to be enabled"
GeometryCache.AsyncGetMeshData					; (True) TRY!!
GeometryCache.InterpolateFrames					; (1) TRY!! only works if GeometryCache.AsyncGetMeshData=False
r.StaticMeshLODDistanceScale					; (1.0)
r.DoLazyStaticMeshUpdate						; (0) TRY often causes flashing primitives
r.MeshDrawCommands.ParallelPassSetup			; (1) "better enabled"
r.HLOD.DitherPauseTime							; (0.5)
r.HLOD.MaximumLevel								; (-1) disabling HLODS may not work with Nanite
r.HLOD.DistanceOverride							; (0 0 0) e.g. r.HLOD.DistanceOverride 5000, 10000, 20000
wp.Runtime.HLOD.WarmupNumFrames					; (5) delays unloading cells for n frames to ensure HLODs ready to show
wp.Runtime.HLOD.WarmupVTScaleFactor				; (2.0) 2 is better
wp.Runtime.MaxLoadingStreamingCells				; (29)
r.StaticMesh.StripDistanceFieldDataDuringLoad	; (0) DF required for fog
landscape.RenderNanite							; (1) TRY!!
r.Nanite										; (1)
r.Nanite.CameraDistanceCulling					; (1)
r.Nanite.AsyncRasterization						; (1)
r.Nanite.ParallelBasePassBuild=0				; (1) TEST "less hitchy"
r.Nanite.CoarseMeshStreaming=1					; (0) TRY
r.Nanite.CoarseMeshStreamingMode				; (0)
r.Nanite.CoarseStreamingMeshMemoryPoolSizeInMB	; (220)
r.Nanite.AllowComputeMaterials					; (0) "broken, missing shaders"
r.Nanite.AutoShaderCulling=1					; (0)
r.Nanite.DisocclusionHack=1						; (0) TRY may mitigate performance spikes
r.Nanite.MaterialVisibility						; (0) hitchy
r.Nanite.MaterialVisibility.Async=0				; (1) hitchy
r.Nanite.VSMMeshShaderRasterization=1			; (0) DIAG
r.Nanite.MaterialSortMode						; (4)
;r.Nanite.MaterialVisibility.Instances=1		; (0)
;r.Nanite.FilterPrimitives=0					; (1)
r.GeometryCollection.Nanite						; (1)
r.VelocityOutputPass							; (1) adds an extra GBuffer target during base pass
r.Velocity.EnableVertexDeformation				; (2) enables WPO on meshes that have not moved when r.VelocityOutputPass != 2
r.OptimizedWPO=True								; (False)

; ----- textures -----
r.SharedLinearTextureEncoding=1					; (0) TRY!! reuse insted of reencode
r.VirtualTextures								; (1)
r.PreTileTextures								; (1)
r.Strata										; (0) TRY
r.MaterialEnableNewHLSLGenerator=2				; (0) force new HLSL material generator
r.Material.RoughDiffuse=1						; (0)
r.VT.AnisotropicFiltering=1						; (0)
r.VT.MaxAnisotropy								; (8)
r.MaxAnisotropy									; (8)

; ----- shaders -----
d3d12.PSO.DiskCache								; (0) broken, causing corrupt shader caches in Stalker2\Saved
d3d12.PSO.DriverOptimizedDiskCache				; (0) disabled due to AMD OOM error
d3d11.ZeroBufferSizeInMB=16						; (4) in case someone tries to run as DX11
d3d12.ZeroBufferSizeInMB=16						; (4)
d3d12.AllowPoolAllocateIndirectArgBuffers=1		; (0)
d3d12.PoolAllocator.RTUAVTextureVRAMPoolSize	; (0)
d3d12.UseUpdateTexture3DComputeShader			; (0) TEST "better with RHI changes"
r.D3D.ForceDXC=1								; (0) apparently forced in SM6 mode anyway
r.CompileShadersForDevelopment=0				; (1)
r.ForceAllCoresForShaderCompiling=1				; (0) doesn't work
r.PSO.CreateOnRHIThread							; (False) off is faster
r.PSO.PrecompileThreadPoolPercentOfHardwareThreads=80		; (0)
r.PSOPrecaching									; (1)
r.PSOPrecache.Resources=1						; (0)
r.PSOPrecache.GlobalComputeShaders=1			; (0) DIAG
r.PSOPrecache.KeepInMemoryComputeMaxNum			; (1000)
r.PSOPrecache.KeepInMemoryGraphicsMaxNum		; (5000)
r.PSOPrecache.KeepInMemoryUntilUsed				; (1)
r.PSOWarmup.Enable								; (True)
r.PSOWarmup.TrackStatistics						; (False)
r.PSOWarmup.WarmupMaterials						; (True) TRY
r.PSOWarmup.MaterialCountPortionToStart=20		; (100) TRY
r.PSOWarmup.GlobalComputeShaders				; (True)
r.PSOWarmup.ClearGarbageEachNMaterials			; (50)
r.PSOWarmup.GCIterationsAfterFinish				; (10)
niagara.CreateShadersOnLoad						; (0)
r.Shaders.Validation=0							; (1)
r.CreateShadersOnLoad							; (0)
r.ShaderLibrary.PrintExtendedStats=0			; (1)
r.Shaders.CompressionFormat.Oodle.Algo=1		; (2) change to Selkie
r.Shaders.CompressionFormat.Oodle.Level			; (6)
r.Shading.EnergyConservation					; (1) balances diffuse/specular, leave on
r.ShaderCompiler.AllowDistributedCompilation=0	; (1) fix possible hang at precompilation
r.ShaderCompiler.MaxJobCacheMemoryMB=8192		; (16384) 16GB (!)
r.ShaderCompiler.TooLongIOThresholdSeconds		; (0.3)
r.ShaderPipelineCache.StartupMode				; (1)
r.ShaderPipelineCache.GameFileMaskEnabled=1	; (0) DIAG
r.ShaderPipelineCache.AlwaysGenerateOSCache=0	; (1) DIAG
r.ShaderPipelineCache.ReportPSO=0				; (1) pointless
r.ShaderPipelineCache.LogPSO					; (1)
r.ShaderPipelineCache.SaveUserCache				; (1)
r.ShaderPipelineCache.SaveAfterPSOsLogged=100	; (0)
r.ShaderPipelineCache.AutoSaveTime=11			; (30)
r.ShaderPipelineCache.BatchTime=2.0				; (16.0) clamp per frame
r.ShaderPipelineCache.BatchSize=30				; (50) depends on shader complexity
r.ShaderPipelineCache.BackgroundBatchTime=2.0	; (0.0) TRY requires devs to enable while in match
r.ShaderPipelineCache.BackgroundBatchSize=10	; (1)
r.ShaderPipelineCache.PreOptimizeEnabled=1		; (0) DIAG
r.ShaderPipelineCache.PrecompileBatchSize=20	; (50) TRY conservative precompilation speedup
r.ShaderPipelineCache.LazyLoadShadersWhenPSOCacheIsPresent	; (0) TRY
r.Shading.EnergyPreservation					; (1)
r.SkinCache.Mode								; (1) 1 uses compute, not vertex shader (if ( r.SkinCache.CompileShaders=1 and r.SkinCache.Allow=True ))
r.SkinCache.Allow								; (True)
r.SkinCache.CompileShaders						; (1)
r.SkinCache.RecomputeTangentsParallelDispatch	; (0) TRY!!
r.SkinCache.SceneMemoryLimitInMB				; (256)
r.SkinCache.NumTangentIntermediateBuffers=2		; (1) >1 may alow GPU to overlap jobs
r.SkinCache.SkipCompilingGPUSkinVF=True			; (False) TEST set True if r.SkinCache.Mode=1
r.SkinCache.MaxDispatchesPerCmdList				; (0) TRY!!

; ----- animations/physics -----
MovieScene.LegacyConversionFrameRate=60fps		; (60000fps)
a.Budget.Enabled								; (1)
a.URO.Enable									; (1)
a.URO.DisableInterpolation						; (0)
a.URO.ForceInterpolation						; (0)
;UMG.AnimationBudgetMs=2.0						; (0.0) TRY
a.ParallelAnimInterpolation						; (1) "better enabled"
a.ParallelAnimUpdate							; (1)
a.ForceParallelAnimUpdate=1						; (0) "slightly better"
p.RemoveFarBodiesFromBVH=1						; (0) what is 'far'?
p.UseResimCache=1								; (0) TRY (requires restart)
p.PositionLerp									; (-1)
p.IterationsPerTimeSlice						; (0)
p.Cloth.LODLevelToStopSimulation				; (2)
p.Chaos.Solver.IslandGroups.ParallelMode		; (1)
p.Cloth.LODLevelToStopSimulation				; (2)
s.CollisionStreaming.Radius						; (8250.0) 82.5m
;ActorSequence.DefaultEvaluationType=1			; (0)
;ControlRigSequence.DefaultEvaluationType=1		; (0)

; ----- direct lighting -----
r.DiffuseIndirect.Denoiser=0					; (1)
r.MinScreenRadiusForLights						; (0.03)
r.LightMaxDrawDistanceScale						; (1.0) scalability
r.RectLightAtlas.MaxResolution					; (4096)
;r.Lighting.UseDepthBufferCopy=True				; (False) DIAG
;r.Lighting.ShadingModelSorting.Enable=True		; (False) DIAG
;r.Lighting.ShadingModelSorting.UseForSpotLights			; (True)
;r.Lighting.ShadingModelSorting.UseForRectLights			; (True)
;r.Lighting.ShadingModelSorting.UseForPointLights			; (True)
;r.Lighting.ShadingModelSorting.UseForBatchedLights			; (False)
;r.Lighting.ShadingModelSorting.UseForDirectLight			; (False)
r.LumenScene.FastCameraMode						; (0)
r.Lumen.HardwareRayTracing.MaxIterations		; (8192)
r.Lumen.ProbeHierarchy.SamplePerPixel			; (8)
r.LumenScene.Lighting.AsyncCompute				; (0) DIAG
r.LumenScene.DirectLighting.MaxLightsPerTile	; (8)
r.LumenScene.DirectLighting.UpdateFactor=64		; (16) TEST
r.LumenScene.SurfaceCache.Capture.NaniteMultiView=0			; (1)
r.LumenScene.SurfaceCache.Capture.MeshTargetScreenSize		; (0.15)
r.LumenScene.SurfaceCache.Capture.NaniteLODScaleFactor		; (1.0)
r.LumenScene.SurfaceCache.CardCaptureFactor					; (64)
r.LumenScene.SurfaceCache.CardCaptureMargin=4000.0			; (0.0) TEST
r.LumenScene.SurfaceCache.CardCapturesPerFrame				; (300)
r.LumenScene.SurfaceCache.CardMaxResolution					; (512)
r.LumenScene.SurfaceCache.CardCaptureRefreshFraction		; (0.0)
r.LumenScene.SurfaceCache.Compress=0						; (1) TEST probably costs memory

; ----- indirect lighting -----
r.DynamicGlobalIlluminationMethod				; (1) Lumen
;r.GBufferDiffuseSampleOcclusion=1				; (0) CAUTION expensive. requires restart. use bent normals for Lumen AO
r.Lumen.IrradianceFieldGather					; (0)
r.Lumen.DiffuseIndirect.AsyncCompute=1			; (0) DIAG
r.Lumen.DiffuseIndirect.CardTraceEndDistanceFromCamera	; (4000.0)
r.LumenScene.Radiosity.SpatialFilterProbes		; (1)
r.LumenScene.Radiosity.ProbeSpacing				; (4)
r.LumenScene.Radiosity.HemisphereProbeResolution		; (4)
r.Lumen.RadianceCache.Update							; (1)
r.Lumen.RadianceCache.SortTraceTiles=1					; (0)
r.Lumen.RadianceCache.NumFramesToKeepCachedProbes		; (15)
r.Lumen.RadianceCache.SpatialFilterMaxRadianceHitAngle	; (0.2)
r.Lumen.ScreenProbeGather								; (1)
r.Lumen.ScreenProbeGather.ScreenTraces					; (1)
r.Lumen.ScreenProbeGather.TemporalFilterProbes=1		; (0)
r.Lumen.ScreenProbeGather.Temporal.MaxFramesAccumulated	; (60)
r.Lumen.ScreenProbeGather.DownsampleFactor				; (32)
r.Lumen.ScreenProbeGather.IrradianceFormat=1			; (0)
r.Lumen.ScreenProbeGather.StochasticInterpolation		; (1)
r.Lumen.ScreenProbeGather.MaxRoughnessToEvaluateRoughSpecular	; (0.8) clamp is okay
r.Lumen.ScreenProbeGather.RadianceCache.ProbeResolution			; (16) scalability
r.Lumen.ScreenProbeGather.ImportanceSample.MinPDFToTrace		; (0.1) fixes boiling noise in dark areas with minor visual loss
r.Lumen.ScreenProbeGather.ScreenSpaceBentNormal=1				; (0)
r.Lumen.ScreenProbeGather.ScreenSpaceBentNormal.ApplyDuringIntegration		; (0) better overall disabled

; ----- LODs -----
r.DisableLODFade								; (0)
r.LODFadeTime=1.0								; (0.25)
r.Decal.FadeDurationScale						; (1.0)
r.Decal.FadeScreenSizeMult=2.0					; (1.0) prevent some decals disappearing while in view
r.Shadow.FadeExponent=1.0						; (0.25)
r.CalcLocalPlayerCachedLODDistanceFactor		; (1) TRY

; ----- shadows -----
r.ParallelGatherShadowPrimitives				; (1)
r.ParallelShadows								; (1)
r.ParallelShadowsNonWholeScene					; (0)
r.ContactShadows								; (1)
r.ContactShadows.NonShadowCastingIntensity=0.6	; (0.0)
r.Shadow.Virtual.Enable							; (1)
r.Shadow.Virtual.NonNaniteVSM					; (1) PC/NPC shadows
r.Shadow.Virtual.OnePassProjection.AsyncCompute=True		; (False)
r.Shadow.Virtual.OnePassProjection.UseAggressiveRegistersOptimizationLevel=2						; (0)
r.Shadow.Virtual.OnePassProjection.UseAggressiveRegistersOptimizationLevel.WithoutHairStrands=1		; (0)
r.Shadow.Virtual.OnePassProjection.UseLightExtentToCollectShadowMaskBits=1							; (0)
r.Shadow.NaniteLODBias							; (1.0)
r.Shadow.Virtual.MaxPhysicalPages				; (2048) scalability
r.Shadow.Virtual.ResolutionLodBiasDirectional	; (-0.5) scalability
r.Shadow.Virtual.ResolutionLodBiasLocal			; (0.0) scalability
r.Shadow.NaniteLODBias=2.0						; (1.0) reduce Nanite overhead
r.Shadow.Virtual.SMRT.SamplesPerRayDirectional=4		; (2) TRY
r.Shadow.Virtual.SMRT.TexelDitherScaleLocal=6.0			; (2.0) TRY
r.Shadow.UnbuiltPreviewInGame=0					; (1) should almost never be enabled on new games
r.Shadow.UnbuiltWholeSceneDynamicShadowRadius=100.0		; (2000000.0) effectively disable
r.Shadow.RecordInteractionShadowPrimitives		; (1) TRY
r.Shadow.ForceSerialSingleRenderPass			; (0)
r.Shadow.AlwaysAllocateMaxResolutionAtlases=1	; (0) memory is less of concern
r.Shadow.TransitionScale						; (60.0) TODO if VSMs disabled TRY fix self-shadowing artifacts
r.Shadow.CSMCaching								; (0) TODO enable if VSMs disabled
r.Shadow.CSMDepthBoundsTest						; (1)
r.Shadow.CSMDepthBias=4.0						; (10.0) TRY reduce conservatively (expensive)
r.Shadow.CacheWPOPrimitives=1					; (0) TRY can cause artifacts
r.Shadow.CacheWholeSceneShadows					; (1) TODO likely disable if VSMs disabled, "worse enabled"
r.Shadow.Preshadows								; (1)
r.Shadow.PreShadowResolutionFactor=0.25			; (1.0) why draw preshadows at full resolution?
r.Shadow.PreshadowsForceLowestDetailLevel=1		; (0)
r.Shadow.CachePreshadow							; (1)
r.Shadow.WholeSceneShadowCacheMb				; (202) TODO not used with VSM, MOVE scalability
r.Shadow.MaxSoftKernelSize=15					; (40) TODO TUNE if disable VSM
;r.Shadow.DistanceScale							; (1.0) scalability
r.Shadow.EnableModulatedSelfShadow				; (0) mobile only
r.Shadow.MaxNumFarShadowCascades=4				; (10)
r.Shadow.OcclusionCullCascadedShadowMaps		; (0) TRY
r.HFShadowQuality								; (2)
r.HLOD.ForceDisableCastDynamicShadow			; (0) CAUTION
r.MaxCSMRadiusToAllowPerObjectShadows=3000.0	; (8000.0)
r.Shadow.Denoiser=0								; (2) TEST
r.Shadow.Denoiser.PreConvolution				; (1)
r.Shadow.Denoiser.ReconstructionSamples			; (8)
r.Shadow.Denoiser.TemporalAccumulation			; (1)
r.Shadow.Denoiser.HistoryConvolutionSamples		; (1)
r.RayTracing.Shadows							; (0) TRY!!
r.RayTracing.Shadows.Lights.Directional			; (1)
r.RayTracing.Shadows.Lights.Point				; (1)
r.RayTracing.Shadows.Lights.Rect				; (1)
r.RayTracing.Shadows.Lights.Spot				; (1)

; ----- ambient occlusion -----
r.AOUseHistory=0								; (1) TEST
r.AOHistoryStabilityPass						; (1) TRY
r.AOHistoryWeight								; (0.85)
r.AmbientOcclusion.Method						; (0) Lumen AO is used
r.AmbientOcclusion.Compute						; (0)
r.AmbientOcclusion.AsyncComputeBudget			; (1)
r.GTAO.Downsample=1								; (0) CAUTION head on ground bug
r.GTAO.NumAngles=1								; (2) CAUTION head on ground bug
r.AmbientOcclusion.Denoiser=0					; (2)
r.AmbientOcclusion.Denoiser.PreConvolution		; (2)
r.AmbientOcclusion.Denoiser.ReconstructionSamples					; (16)
r.AmbientOcclusion.Denoiser.TemporalAccumulation					; (1)
r.AmbientOcclusion.Denoiser.HistoryConvolution.SampleCount			; (1)
r.AmbientOcclusion.Denoiser.HistoryConvolution.KernelSpreadFactor	; (7.0)

; ----- distance fields -----
r.DistanceFields								; (1) TRY
r.DistanceFieldAO								; (1)
r.DistanceFieldShadowing						; (1) TRY
r.Lumen.TraceMeshSDFs.Allow						; (1)

; ----- vegetation -----
foliage.MinimumScreenSize=0.005					; (0.000005)
foliage.MinOcclusionQueriesPerComponent=2		; (6)
foliage.MaxOcclusionQueriesPerComponent=6		; (16)
foliage.MinInstancesPerOcclusionQuery			; (256) TRY
fg.MaxNumComponentsToProcess=16					; (2) moved to Extensions
fg.MaxNumBakedFoliageActorsToProcess=16			; (2) moved to Extensions
fg.MaxNumComponentsToTick=8						; (2) moved to Extensions
fg.NumBakedFoliageActorsToTick.Near=16			; (4) moved to Extensions
fg.MaxNumComponentsToTick.Near=24				; (4) moved to Extensions
foliage.DensityScale							; (0.0) scalability
fg.NumBakedHISMsOrISMsToProcess.Trees=16		; (4)
fg.NumBakedHISMsOrISMsToProcess.Bushes=16		; (4)
fg.NumBakedHISMsOrISMsToProcess.Grass=16		; (2)
grass.Enable=0									; (1)
grass.DisableDynamicShadows=1					; (0) TRY
grass.MaxAsyncTasks=16							; (4) moved to Extensions
grass.MaxCreatePerFrame=12						; (1) moved to Extensions
grass.MinFramesToKeepGrass=80					; (30) TUNE too low causes fps drops
grass.UseHaltonDistribution=1					; (0)
grass.DensityScale								; (1.0) scalability
;r.Lumen.ScreenProbeGather.TwoSidedFoliageBackfaceDiffuse=0	; (1)

; ----- reflections -----
r.SSR.Quality									; (3) max 4
r.SSR.Temporal									; (0) SSR not used
r.SSR.MaxRoughness=0.8							; (-1)
r.Reflections.Denoiser=0						; (2)
r.NGX.DLSS.DenoiserMode							; (0) set by Extensions
r.NGX.DLSS.Reflections.TemporalAA=0				; (1) not used
r.NGX.DLSS.WaterReflections.TemporalAA=0		; (1) not used
r.RayTracing.DynamicGeometryLastRenderTimeUpdateDistance=2000.0		; (5000.0) distance in BVH
r.Lumen.Reflections.AsyncCompute				; (0)
r.Lumen.Reflections.DownsampleFactor=1			; (2)
r.Lumen.Reflections.MaxRoughnessToTrace			; (0.3)
r.Lumen.Reflections.RoughnessFadeLength=0.1		; (0.1)
r.Lumen.Reflections.SmoothBias					; (0.0) adds a damp look
r.Lumen.Reflections.Temporal					; (1)
r.Lumen.Reflections.Temporal.MaxFramesAccumulated		; (32)
r.Lumen.Reflections.Temporal.DistanceThreshold			; (0.03) adjust ghosting
r.Lumen.Reflections.Temporal=0							; (1)
r.Lumen.TranslucencyReflections.FrontLayer.Allow		; (1)
r.Lumen.TranslucencyReflections.FrontLayer.Enable		; (1)
r.Lumen.TranslucencyReflections.FrontLayer.EnableForProject		; (1)
r.Lumen.Reflections.GGXSamplingBias=0.6					; (0.1)
r.Lumen.Reflections.MaxRayIntensity=2.0					; (100.0) clamp
r.Lumen.Reflections.ScreenSpaceReconstruction					; (1) TRY!! adds fog to reflections
r.Lumen.Reflections.ScreenSpaceReconstruction.RoughnessScale=0.2		; (1.0)
r.Lumen.Reflections.ScreenSpaceReconstruction.KernelRadius=24.0	; (8.0) fix boiling noise on rough reflective surfaces
r.Lumen.Reflections.ScreenSpaceReconstruction.NumSamples=7		; (5)
r.Lumen.Reflections.BilateralFilter								; (1)
r.Lumen.Reflections.BilateralFilter.NumSamples					; (4)
r.Lumen.Reflections.BilateralFilter.SpatialKernelRadius=0.002 	; (0.001)
r.Lumen.Reflections.BilateralFilter.StrongBlurVarianceThreshold	; (0.5)
r.Lumen.Reflections.RadianceCache								; (1)
r.Lumen.Reflections.RadianceCache.AngleThresholdScale			; (1.0) TEST10
r.Lumen.Reflections.HierarchicalScreenTraces.MaxIterations		; (50) higher is faster??

; ----- water -----
r.Water.Enabled									; (1)
r.ParallelSingleLayerWaterPass					; (1)
r.Water.SingleLayer.RefractionDownsampleFactor	; (1)

; ----- fog -----
r.VolumetricLightmap.VisualizationMinScreenFraction		; (0.001) TRY
r.VolumetricFog.LightFunction.Resolution				; (128)
r.VolumetricFog.LightFunction.LightFunctionCount		; (16) TRY expensive
r.VolumetricFog.DepthDistributionScale			; (32.0) "too low causes fog leaking inside"
;r.VolumetricFog.HistoryWeight=0.95				; (0.8) TUNE reduce fog flickering
;r.VolumetricFog.UpsampleJitterMultiplier=0.75	; (0.0) smooth fog slightly
r.VolumetricFog.ConservativeDepth				; (0) enabled causes heavy ghosting

; ----- translucency -----
r.ParallelTranslucency							; (1)
r.SeparateTranslucency							; (1) enabled is worse FT stability, but disabling breaks sky
r.SeparateTranslucencyScreenPercentage			; (100.0)
r.Refraction.OffsetQuality=1					; (0)
r.VolumetricRenderTarget.PreferAsyncCompute		; (0)
r.VolumetricRenderTarget.Mode					; (0)
r.TranslucencyLightingVolumeInnerDistance		; (1500.0)
r.TranslucencyLightingVolumeOuterDistance		; (5000.0)
r.Lumen.TranslucencyVolume.TraceFromVolume		; (1)
r.Lumen.TranslucencyVolume.TraceStepFactor		; (2.0) lower = better performance
r.Lumen.TranslucencyVolume.GridPixelSize		; (64)

; ----- sky/clouds -----
r.VolumetricCloud								; (1)
r.SupportSkyAtmosphere							; (1)
r.SupportSkyAtmosphereAffectsHeightFog			; (1) not used
r.SkylightIntensityMultiplier					; (1.0)
r.RayTracing.ExcludeSky							; (1)
r.RayTracing.Skylight							; (0)

; ----- particles/fx -----
niagara.WaveIntrinsics							; (0)
niagara.GPUCountBufferSlack						; (1.5) TRY
r.ParticleLightQuality							; (2)
;r.ParticleLODBias=1							; (0)
r.Emitter.FastPoolEnable=1						; (0)
fx.Niagara.TaskPriority.AllowHighPriPerfTests=0	; (1)
fx.Niagara.ForceAutoPooling						; (0) TRY
fx.Niagara.DebugDraw.Enabled=0					; (1)
fx.Niagara.GpuComputeDebug.DrawDebugEnabled=0	; (1)
fx.Niagara.WarnComponentRenderCount=999999		; (50)
fx.NiagaraRuntimeCycleHistorySize=60			; (15)
fx.NiagaraDataBufferMinSize=2048				; (512) bytes
fx.NiagaraGpuLowLatencyTranslucencyEnabled		; (1)
fx.NiagaraBatcher.FreeBufferEarly=0				; (1) avoid buffer ping pong
fx.Niagara.TaskPriorities.High=nnn				; (hnn)
fx.Niagara.TaskPriorities.Normal=bnn			; (hnn)
fx.Niagara.TaskPriorities.Low=bnn				; (nnn)
fx.Niagara.WorldManager.SpawnPerTickGroup		; (1)
fx.Niagara.SystemSimulation.TickTaskShouldWait	; (0) TRY wait for concurrent work?
fx.Niagara.SystemSimulation.UpdateOnSpawn		; (1) TRY
fx.Niagara.SystemSimulation.AllowASync			; (1) TRY enables parallel post tick
fx.NiagaraComponentPool.CleanTime=33.172		; (30.0) avoid time-aligned tasks
fx.ParticleSystemPool.CleanTime=35.751			; (30.0) avoid time-aligned tasks
fx.ForceCompileOnLoad=0							; (0)
fx.ForceMergeOnLoad								; (0)
fx.ParticlePerfStats.Enabled=False				; (True)
fx.EnableCircularAnimTrailDump=0				; (2)
fx.AllowFastPathFunctionLibrary=1				; (0) TRY
fx.FXAllowParticleMeshLODs=1					; (0)
fx.Budget.Enabled=True							; (False) not read here. added to Extensions
fx.Budget.GameThread							; (2.0)
fx.Budget.GameThreadConcurrent					; (2.0)
fx.Budget.RenderThread							; (2.0)
fx.DeferrPSCDeactivation=1						; (0)
fx.BatchAsync=1									; (0) "needed, removes hitches"
fx.BatchAsyncBatchSize=8						; (32) TUNE
fx.EarlyScheduleAsync=1							; (0) TEST
fx.ParticleManagerAsyncBatchSize				; (8) TUNE
fx.GPUSpawnWarningThreshold=99999999			; (20000)
fx.MaxCPUParticlesPerEmitter					; (1000) TUNE
fx.MaxGPUParticlesSpawnedPerFrame				; (1048576)
fx.MaxNiagaraGPUParticlesSpawnPerFrame			; (2000000)
fx.ScalabilityManParallelThreshold=10			; (50) TUNE how many instances to go parallel
fx.ScalabilityMaxUpdatesPerFrame=10				; (50) TUNE how many instances processed per frame? -1 for all
fx.SkipVectorVMBackendOptimizations=0			; (1) TRY why skip?
fx.GPUSimulationTextureSizeX=512				; (1024)
fx.GPUSimulationTextureSizeY=512				; (1024)
fx.Niagara.DisableMaxDeltaTimeForAdvance=0		; (1) TEST improve particle fps

; ----- characters -----
r.IrisNormal=1									; (0) enable Iris normal maps (if irises used correctly)
r.SSS.Scale=2.0									; (1.0)
r.SSS.SubSurfaceColorAsTansmittanceAtDistance=0.1		; (0.15)
r.SSS.Burley.EnableProfileIdCache				; (1)
r.SSS.Checkerboard.NeighborSSSValidation=1		; (0)
r.SkeletalMeshLODBias							; (0) Int32. can cause shadow problems in cut scenes
r.EarlyTranslucentVelocityAndHairComposition=True		; (False) start async compute pass early
r.HairStrands.AsyncLoad=1						; (0)
r.HairStrands.Log=0								; (-1)
r.HairStrands.Voxelization						; (1)
r.HairStrands.Voxelization.Virtual.VoxelPageCountPerDim=2	; (14) improve FPS drop
r.HairStrands.Voxelization.Virtual.VoxelPageResolution=24	; (32) improve FPS drop
r.HairStrands.Voxelization.Virtual.VoxelWorldSize			; (0.3)
r.HairStrands.Voxelization.VoxelSizeInPixel					; (2)
r.HairStrands.Simulation=0						; (1)
r.HairStrands.SkyAO=0							; (1) no difference
r.HairStrands.SkyAO.DistanceThreshold=1.0		; (10.0)
r.HairStrands.SkyLighting.LumenHairAO			; (False) no difference
r.HairStrands.UseGPUPositionOffset				; (1)
r.HairStrands.Strands.TransferPrevPos			; (0)
r.HairStrands.Streaming.Prediction				; (False)
r.HairStrands.Visibility.UseHWRaster=1			; (0)
r.HairStrands.SkyLighting.MaxIndirectLightIntensity			; (0.5)
r.HairStrands.SkyLighting.DistanceThreshold=1.0				; (10.0)
r.HairStrands.SkyLighting.LumenHairAO.FadeDistance=2000.0	; (24000.0)
r.HairStrands.Visibility.HairCount.DistanceThreshold=10.0	; (30.0)
r.HairStrands.Visibility.UseCoverageMappping=1	; (0)
r.HairStrands.VelocityThreshold=5				; (1)
r.HairStrands.DeepShadow.Resolution=256			; (2048)

; ----- ray tracing -----
r.VRS.Enable									; (False) can't be enabled
r.VRS.EnableImage								; (True)
r.RayTracing.AsyncBuild=1						; (0) TRY
r.RayTracing.ParallelMeshBatchSetup				; (1) TRY
r.RayTracing.ExcludeDecals=1					; (0) from BVH
r.RayTracing.UseTextureLod						; (1)
r.RayTracing.SceneUpdateOnce=1					; (0) TRY!!
r.RayTracing.Culling.Radius=5000.0				; (10000.0)
r.RayTracing.Geometry.ProceduralMeshes			; (1)
r.RayTracing.Geometry.StaticMeshes.WPO.CullingRadius=3000.0		; (12000.0) excessive
r.RayTracing.Geometry.InstancedStaticMeshes.EvaluateWPO			; (0)
r.RayTracing.Geometry.InstancedStaticMeshes.CullClusterRadius	; (10000.0)
r.RayTracing.Geometry.MaxBuiltPrimitivesPerFrame				; (-1)
r.MinRoughnessOverride							; (0.0)
r.Lumen.HardwareRayTracing						; (1)
r.Lumen.HardwareRayTracing.LightingMode			; (0)

; ----- upsampling -----
;r.FidelityFX.FI.Enabled=1						; (0)
r.FidelityFX.FI.CaptureDebugUI=1				; (0) mostly fixes UE Console flickering
r.FidelityFX.FI.AllowAsyncWorkloads=1			; (1) much faster, FSR3 is designed to run on compute
r.FidelityFX.FSR3.AutoExposure=1				; (0)
r.FidelityFX.FSR3.ReactiveMaskTranslucencyMaxDistance	; (500000.0)
r.FidelityFX.FSR3.ForceLandscapeHISMMobility	; (0) if WPO used, 1 is faster on CPU, 2 is faster on GPU
r.FidelityFX.FSR3.DeDither						; (1) may help ground dither noise
r.TemporalAA.Upsampling							; (1)
r.TemporalAA.Upscaler							; (1) use GTemporal (but allow overriding with DLSS, etc.)
r.TemporalAA.R11G11B10History					; (1) save some memory, no visual difference
r.TemporalAACatmullRom=0						; (1) "looks worse on UE4 TAA Gen5"
r.TemporalAASamples								; (8) "small but important improvement for RT and temporal upscaler"
r.TemporalAAFilterSize=0.8						; (2.0) TRY
r.TemporalAACurrentFrameWeight=0.10				; (0.14)
r.NIS.Enable									; (1)
;r.NGX.Automation.Enable=True					; (False) for DLSS Auto
;r.NGX.LogLevel=1								; (1)
;r.NGX.BinarySearchOrder=2						; (0) TRY to fix DLSS
r.NGX.DLSS.Preset								; (0) 1=A, 3=C, 5=E, 6=F, 7=G
r.NGX.DLSS.Sharpness							; (0)
r.NGX.DLSS.EnableAlphaUpscaling					; (False)
r.NGX.DLSS.AutoExposure=1						; (0) disabled in patch 1.0.1
t.Streamline.Reflex.Enable						; (0)
t.Streamline.Reflex.Mode=2						; (0)
t.Streamline.Reflex.HandleMaxTickRate			; (True)

; ----- post processing -----
r.EyeAdaptation.ExponentialTransitionDistance=2.0	; (7.0)
r.EyeAdaptation.LensAttenuation					; (0.78)
r.UseLegacyMaintainYFOVViewMatrix				; (False)
r.HDR.EnableHDROutput							; (0)
r.HDR.UI.Level									; (1.5)
r.HDR.UI.CompositeMode							; (1)
;r.HDR.Display.ColorGamut=4						; (2) use ACEScg, it has less weird colours than Rec2020
r.SceneRenderTargetResizeMethod					; (0) 2 is least prone to stalls, but highest memory. revert 1.0.2
r.Bloom.AsyncCompute=1							; (0)
r.Bloom.DLSSHack=0								; (1)
r.Bloom.ScreenPercentage=100.0					; (70.710999)
r.Atmosphere.DepthOfFieldDepthBlurRadiusScale	; (1.0)
r.Upscale.Quality								; (3)
r.HighResScreenshotDelay=20						; (4)
r.DefaultFeature.LensFlare						; (0)
r.LensFlareQuality								; (2) scalability
r.LightShaftQuality								; (1) scalability
r.MotionBlur.TargetFPS=60						; (-1)
r.MotionBlurSeparable=1							; (0)
r.MotionBlur.Max=5.5							; (-1)
r.MotionBlur.Amount=0.40						; (-1)
r.Streamline.DLSSG.AdjustMotionBlurTimeScale	; (1)
r.Filter.LoopMode=1								; (0)
r.Filter.SizeScale=2.0							; (1.0) add a little blur
r.GaussianBloom.Cross=-3.0						; (0.0)
r.PostProcessing.PropagateAlpha					; (0)
r.PostProcessing.DownsampleQuality=1			; (0)
r.Color.Min										; (0.0)
r.Color.Mid										; (0.5)
r.Color.Max										; (1.0)
r.TonemapperGamma								; (0)
r.Tonemapper.Sharpen=0.7						; set by game menu
r.Tonemapper.Brightness=0.987					; (0.998279) default clips white slightly
r.Tonemapper.Contrast							; (1.0)

[PlatformCrypto]
PlatformRequiresDataCrypto=True
